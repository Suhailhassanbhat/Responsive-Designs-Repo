{"version":3,"sources":["scripts/salaries-dropdown.js"],"names":["margin","top","right","bottom","left","width","height","svg","d3","select","append","attr","csv","data","console","log","allGroup","map","d","Species","keys","selectAll","enter","text","x","scaleLinear","domain","range","call","axisBottom","y","axisLeft","kde","kernelDensityEstimator","kernelEpanechnikov","ticks","density","filter","Sepal_Length","curve","datum","line","curveBasis","updateChart","selectedGroup","transition","duration","on","value","kernel","X","V","mean","v","k","Math","abs"],"mappings":"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","file":"salaries-dropdown.001f6ddb.js","sourceRoot":"../src","sourcesContent":["// import * as d3 from 'd3'\n\nvar margin = {top: 30, right: 30, bottom: 30, left: 50}\n    width = 460 - margin.left - margin.right\n    height = 400 - margin.top - margin.bottom\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"#my_dataviz\")\n  .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\")\n\n// load data and make sure data is working\n// update scales and variables\n//finally bar charts\n//update axis\n// change CSS\n// get the data\n\n// d3.csv(require('../data/total-salaries.csv'))\n//   .then(ready)\n//   .catch(err => console.log('Failed on', err))\nd3.csv(\"/data/total-salaries.csv\", function(data) {\n    console.log(data)\n\n\n    \n  // List of groups (here I have one group per column)\n  var allGroup = d3.map(data, function(d){return(d.Species)}).keys()\n\n  // add the options to the button\n  d3.select(\"#selectButton\")\n    .selectAll('myOptions')\n    .data(allGroup)\n    .enter()\n    .append('option')\n    .text(function (d) { return d; }) // text showed in the menu\n    .attr(\"value\", function (d) { return d; }) // corresponding value returned by the button\n\n  // add the x Axis\n  var x = d3.scaleLinear()\n    .domain([0, 12])\n    .range([0, width]);\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  // add the y Axis\n  var y = d3.scaleLinear()\n            .range([height, 0])\n            .domain([0, 0.4]);\n  svg.append(\"g\")\n      .call(d3.axisLeft(y));\n\n  // Compute kernel density estimation for the first group called Setosa\n  var kde = kernelDensityEstimator(kernelEpanechnikov(3), x.ticks(140))\n  var density =  kde( data\n    .filter(function(d){ return d.Species == \"setosa\"})\n    .map(function(d){  return +d.Sepal_Length; })\n  )\n\n  // Plot the area\n  var curve = svg\n    .append('g')\n    .append(\"path\")\n      .attr(\"class\", \"mypath\")\n      .datum(density)\n      .attr(\"fill\", \"#69b3a2\")\n      .attr(\"opacity\", \".8\")\n      .attr(\"stroke\", \"#000\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"d\",  d3.line()\n        .curve(d3.curveBasis)\n          .x(function(d) { return x(d[0]); })\n          .y(function(d) { return y(d[1]); })\n      );\n\n  // A function that update the chart when slider is moved?\n  function updateChart(selectedGroup) {\n    // recompute density estimation\n    kde = kernelDensityEstimator(kernelEpanechnikov(3), x.ticks(40))\n    var density =  kde( data\n      .filter(function(d){ return d.Species == selectedGroup})\n      .map(function(d){  return +d.Sepal_Length; })\n    )\n\n    // update the chart\n    curve\n      .datum(density)\n      .transition()\n      .duration(1000)\n      .attr(\"d\",  d3.line()\n        .curve(d3.curveBasis)\n          .x(function(d) { return x(d[0]); })\n          .y(function(d) { return y(d[1]); })\n      );\n  }\n\n  // Listen to the slider?\n  d3.select(\"#selectButton\").on(\"change\", function(d){\n    selectedGroup = this.value\n    updateChart(selectedGroup)\n  })\n\n});\n\n\n// Function to compute density\nfunction kernelDensityEstimator(kernel, X) {\n  return function(V) {\n    return X.map(function(x) {\n      return [x, d3.mean(V, function(v) { return kernel(x - v); })];\n    });\n  };\n}\nfunction kernelEpanechnikov(k) {\n  return function(v) {\n    return Math.abs(v /= k) <= 1 ? 0.75 * (1 - v * v) / k : 0;\n  };\n}\n\n"]}